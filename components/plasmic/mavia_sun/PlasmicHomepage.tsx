// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mJU3w7LiKHPBKUALsVD2dj
// Component: hTwIlTuynqdQp
import React, { useState, useRef } from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: ptkmiNbGzpy1yv/component
import Button from "../../Button"; // plasmic-import: kodhyUpj2vfND/component
import BlogPosts from "../../BlogPosts"; // plasmic-import: vxnSGiRcBqvaI/component
import BlogPost from "../../BlogPost"; // plasmic-import: GPII4fC9bhF/component
import HeroSection from "../../HeroSection"; // plasmic-import: gib5IgK6rWAYJZ/component
import Footer from "../../Footer"; // plasmic-import: ayAaR3NYyZ-kRT/component

import { useScreenVariants as useScreenVariantsohuKUq66Y5Rscr } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ohuKUq66y5rscr/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_mavia_sun.module.css"; // plasmic-import: mJU3w7LiKHPBKUALsVD2dj/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: hTwIlTuynqdQp/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: ZNnQiOQA-EMqaf/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: CzXEhqLtaA5P__/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  bigVerticalStack?: p.Flex<"div">;
  wrappedStack?: p.Flex<"div">;
  header?: p.Flex<typeof Header2>;
  landingVStack?: p.Flex<"div">;
  innerHStack?: p.Flex<"div">;
  titaleVStack?: p.Flex<"div">;
  wrapStack?: p.Flex<"div">;
  h1Text?: p.Flex<"h1">;
  h4Text?: p.Flex<"div">;
  button?: p.Flex<typeof Button>;
  svg?: p.Flex<"svg">;
  imageHStack?: p.Flex<"div">;
  imageBox?: p.Flex<"div">;
  mainArticles?: p.Flex<typeof BlogPosts>;
  allArticles?: p.Flex<typeof BlogPost>;
  features?: p.Flex<"section">;
  container4?: p.Flex<"div">;
  outerRow2?: p.Flex<"div">;
  valusRow1?: p.Flex<"div">;
  valusRow2?: p.Flex<"div">;
  outerRow3?: p.Flex<"div">;
  row4?: p.Flex<"div">;
  preTeam?: p.Flex<"div">;
  team?: p.Flex<"div">;
  wrapTeam?: p.Flex<"section">;
  footerBanner?: p.Flex<typeof HeroSection>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps { }

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const articlesDivRef = useRef(null);
  const scrollToArticles = () => articlesDivRef.current.scrollIntoView({ behavior: "smooth" });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsohuKUq66Y5Rscr()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <div
              data-plasmic-name={"bigVerticalStack"}
              data-plasmic-override={overrides.bigVerticalStack}
              className={classNames(projectcss.all, sty.bigVerticalStack)}
            >
              <div
                data-plasmic-name={"wrappedStack"}
                data-plasmic-override={overrides.wrappedStack}
                className={classNames(projectcss.all, sty.wrappedStack)}
              >
                <Header2
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                  className={classNames("__wab_instance", sty.header)}
                />

                <div
                  data-plasmic-name={"landingVStack"}
                  data-plasmic-override={overrides.landingVStack}
                  className={classNames(projectcss.all, sty.landingVStack)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"innerHStack"}
                    data-plasmic-override={overrides.innerHStack}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.innerHStack)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"titaleVStack"}
                      data-plasmic-override={overrides.titaleVStack}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.titaleVStack)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"wrapStack"}
                        data-plasmic-override={overrides.wrapStack}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.wrapStack)}
                      >
                        <h1
                          data-plasmic-name={"h1Text"}
                          data-plasmic-override={overrides.h1Text}
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1Text
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mediumSize")
                            ? "MAVIA SUN TEAM"
                            : "Mavia Sun Team"}
                        </h1>

                        <div
                          data-plasmic-name={"h4Text"}
                          data-plasmic-override={overrides.h4Text}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.h4Text
                          )}
                          style={{ textAligh: "left !important" }}
                        >
                          {
                            "Sun rises everyday. We do the same."
                          }
                        </div>

                        <Button
                          data-plasmic-name={"button"}
                          data-plasmic-override={overrides.button}
                          className={classNames("__wab_instance", sty.button)}
                          onClick={scrollToArticles}
                          endIcon={
                            <ArrowRightsvgIcon
                              data-plasmic-name={"svg"}
                              data-plasmic-override={overrides.svg}
                              className={classNames(projectcss.all, sty.svg)}
                              role={"img"}
                            />
                          }
                          shape={"rounded" as const}
                        >
                          {"View Articles"}
                        </Button>
                      </p.Stack>
                    </p.Stack>

                    <div
                      data-plasmic-name={"imageHStack"}
                      data-plasmic-override={overrides.imageHStack}
                      className={classNames(projectcss.all, sty.imageHStack)}
                    >
                      {true ? (
                        <div
                          data-plasmic-name={"imageBox"}
                          data-plasmic-override={overrides.imageBox}
                          className={classNames(projectcss.all, sty.imageBox)}
                        />
                      ) : null}
                    </div>
                  </p.Stack>
                </div>

                <BlogPosts
                  data-plasmic-name={"mainArticles"}
                  data-plasmic-override={overrides.mainArticles}
                  className={classNames("__wab_instance", sty.mainArticles)}
                />

                <BlogPost
                  data-plasmic-name={"allArticles"}
                  ref={articlesDivRef}
                  data-plasmic-override={overrides.allArticles}
                  className={classNames("__wab_instance", sty.allArticles)}
                />
              </div>
            </div>

            {true ? (
              <section
                data-plasmic-name={"features"}
                data-plasmic-override={overrides.features}
                className={classNames(projectcss.all, sty.features)}
              >
                <div className={classNames(projectcss.all, sty.column__yLcCd)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___54HrM
                    )}
                  >
                    {"Main values of our Team"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cj0SM
                    )}
                  >
                    {
                      "They all say that quality is better than quantity. But why not have both?"
                    }
                  </div>

                  <div
                    data-plasmic-name={"container4"}
                    data-plasmic-override={overrides.container4}
                    className={classNames(projectcss.all, sty.container4)}
                  >
                    <div
                      data-plasmic-name={"outerRow2"}
                      data-plasmic-override={overrides.outerRow2}
                      className={classNames(projectcss.all, sty.outerRow2)}
                    >
                      <div
                        data-plasmic-name={"valusRow1"}
                        data-plasmic-override={overrides.valusRow1}
                        className={classNames(projectcss.all, sty.valusRow1)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__vUrFe
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___2CfU
                              )}
                            >
                              {(
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? true
                                  : false
                              ) ? (
                                <p.PlasmicImg
                                  alt={""}
                                  className={classNames(sty.img___7PtBe)}
                                  displayHeight={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("400px" as const)
                                  }
                                  displayMaxHeight={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("none" as const)
                                  }
                                  displayMaxWidth={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("none" as const)
                                  }
                                  displayMinHeight={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("0" as const)
                                  }
                                  displayMinWidth={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("0" as const)
                                  }
                                  displayWidth={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("400px" as const)
                                  }
                                  loading={"lazy" as const}
                                  src={{
                                    src: "/plasmic/mavia_sun/images/logo01RemovebgPreviewpng.png",
                                    fullWidth: 366,
                                    fullHeight: 357,
                                    aspectRatio: undefined
                                  }
                                  }
                                />
                              ) : null}
                              {(
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? true
                                  : true
                              ) ? (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox___5Roiy
                                  )}
                                />
                              ) : null}

                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__lYuw4
                                )}
                              >
                                {"New content every day"}
                              </h3>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__us0Aj
                                )}
                              >
                                {
                                  "We take inspiration from the sun. He rises everyday. And We will make one content in each field everyday."
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__kckp1
                          )}
                        >
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bVdM5
                              )}
                            >
                              {(
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? true
                                  : true
                              ) ? (
                                <p.PlasmicImg
                                  alt={""}
                                  className={classNames(sty.img__cer72)}
                                  displayHeight={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("400px" as const)
                                  }
                                  displayMaxHeight={"none" as const}
                                  displayMaxWidth={"none" as const}
                                  displayMinHeight={"0" as const}
                                  displayMinWidth={"0" as const}
                                  displayWidth={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("400px" as const)
                                  }
                                  loading={"lazy" as const}
                                  src={{
                                    src: "/plasmic/mavia_sun/images/logo01RemovebgPreviewpng.png",
                                    fullWidth: 500,
                                    fullHeight: 500,
                                    aspectRatio: undefined
                                  }}
                                  style={"" as const}
                                />
                              ) : null}
                            </div>
                          ) : null}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"valusRow2"}
                        data-plasmic-override={overrides.valusRow2}
                        className={classNames(projectcss.all, sty.valusRow2)}
                      >
                        <div
                          data-plasmic-name={"outerRow3"}
                          data-plasmic-override={overrides.outerRow3}
                          className={classNames(projectcss.all, sty.outerRow3)}
                        >
                          {(
                            hasVariant(globalVariants, "screen", "mediumSize")
                              ? true
                              : false
                          ) ? (
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__rj4H)}
                              displayHeight={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? ("110px" as const)
                                  : ("400px" as const)
                              }
                              displayMaxHeight={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? ("110px" as const)
                                  : ("none" as const)
                              }
                              displayMaxWidth={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? ("110px" as const)
                                  : ("none" as const)
                              }
                              displayMinHeight={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? ("110px" as const)
                                  : ("0" as const)
                              }
                              displayMinWidth={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? ("110px" as const)
                                  : ("0" as const)
                              }
                              displayWidth={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? ("70px" as const)
                                  : ("400px" as const)
                              }
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/mavia_sun/images/logo01RemovebgPreviewpng.png",
                                fullWidth: 366,
                                fullHeight: 357,
                                aspectRatio: undefined
                              }
                              }
                            />
                          ) : null}

                          <div
                            data-plasmic-name={"row4"}
                            data-plasmic-override={overrides.row4}
                            className={classNames(projectcss.all, sty.row4)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__vc5Cg
                              )}
                            >
                              {(
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mediumSize"
                                )
                                  ? true
                                  : true
                              ) ? (
                                <p.PlasmicImg
                                  alt={""}
                                  className={classNames(sty.img__zutd5)}
                                  displayHeight={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("400px" as const)
                                  }
                                  displayMaxHeight={"none" as const}
                                  displayMaxWidth={"none" as const}
                                  displayMinHeight={"0" as const}
                                  displayMinWidth={"0" as const}
                                  displayWidth={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mediumSize"
                                    )
                                      ? ("110px" as const)
                                      : ("400px" as const)
                                  }
                                  loading={"lazy" as const}
                                  src={{
                                    src: "/plasmic/mavia_sun/images/logo01RemovebgPreviewpng.png",
                                    fullWidth: 500,
                                    fullHeight: 500,
                                    aspectRatio: undefined
                                  }}
                                />
                              ) : null}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__fIy1
                              )}
                            >
                              {true ? (
                                <p.Stack
                                  as={"div"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__zecBi
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox___5S9Rq
                                    )}
                                  />

                                  <h3
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h3,
                                      projectcss.__wab_text,
                                      sty.h3___2AZs7
                                    )}
                                  >
                                    {"Altre cose per elevarci a best team"}
                                  </h3>

                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__yAiD
                                    )}
                                  >
                                    {
                                      "More quality than yesterday but less than Tomorrow. Besides the quantity we focus more on quality, and We will improve everyday no matter what."
                                    }
                                  </div>
                                </p.Stack>
                              ) : null}
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </section>
            ) : null}

            <div
              data-plasmic-name={"preTeam"}
              data-plasmic-override={overrides.preTeam}
              className={classNames(projectcss.all, sty.preTeam)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__eGy6
                )}
              >
                {"Team"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eiRds
                )}
              >
                {
                  "We have chosen the best Moderators, Social Media Manager and artists because our goal is to excel. And we will do whatever it takes to bring up this project, and let the play to earn era begins."
                }
              </div>
            </div>

            {true ? (
              <div
                data-plasmic-name={"team"}
                data-plasmic-override={overrides.team}
                className={classNames(projectcss.all, sty.team)}
              >
                {
                  <div className={classNames(projectcss.all, sty.freeBox__fzgmN)}>
                    <p.Stack
                      as={"section"}
                      data-plasmic-name={"wrapTeam"}
                      data-plasmic-override={overrides.wrapTeam}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.wrapTeam)}
                    >

                      <div className={classNames(projectcss.all, sty.column__wMsG1)} >
                        <div className={classNames(projectcss.all, sty.freeBox__nKyi)}>
                          <div className={classNames(projectcss.all, sty.freeBox__fOpl)} style={{ overflowX: "scroll" }} >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__iyzRx)}
                              displayHeight={"171px" as const}
                              displayMaxHeight={"171px" as const}
                              displayMaxWidth={"171px" as const}
                              displayMinHeight={"171px" as const}
                              displayMinWidth={"171px" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/mavia_sun/images/LOGO_yellow.jpeg",
                                fullWidth: 316,
                                fullHeight: 376,
                                aspectRatio: undefined
                              }}
                            />

                            <h5 className={classNames(projectcss.all, projectcss.h5, projectcss.__wab_text, sty.h5__gNw8K)} >
                              {"Meme"}
                            </h5>

                            <div before={"" as const} className={classNames(projectcss.all, projectcss.__wab_text, sty.text__i5Cyh)} >
                              {
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Scerif "}
                                  </span>
                                  <React.Fragment>
                                    {" I made memes since 2016. I worked for many Instagram pages, because I genuinely love to make people laugh and that's all for me. \n"}
                                  </React.Fragment>
                                </React.Fragment>
                              }
                            </div>
                          </div>
                        </div>
                      </div>

                      <div className={classNames(projectcss.all, sty.column__wMsG1)} >
                        <div className={classNames(projectcss.all, sty.freeBox__nKyi)}>
                          <div className={classNames(projectcss.all, sty.freeBox__fOpl)} style={{ overflowX: "scroll" }} >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__iyzRx)}
                              displayHeight={"171px" as const}
                              displayMaxHeight={"171px" as const}
                              displayMaxWidth={"171px" as const}
                              displayMinHeight={"171px" as const}
                              displayMinWidth={"171px" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/mavia_sun/images/LOGO_red.jpeg",
                                fullWidth: 316,
                                fullHeight: 376,
                                aspectRatio: undefined
                              }}
                            />

                            <h5 className={classNames(projectcss.all, projectcss.h5, projectcss.__wab_text, sty.h5__gNw8K)} >
                              {"Engagement"}
                            </h5>

                            <div before={"" as const} className={classNames(projectcss.all, projectcss.__wab_text, sty.text__i5Cyh)} >
                              {
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Franklin"}
                                  </span>
                                  <React.Fragment>
                                    {" I'm Franklin ,i've 23 years old, I always had passion for this beatiful world wich on that of computer science. MOBA games olayer since 2012 \n"}
                                  </React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Alessandro"}
                                  </span>
                                  <React.Fragment>
                                    {" Hi, my name is Alessandro and I'm a determined and very ambitious guy. I believe in my team and in this project \n"}
                                  </React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Giuse"}
                                  </span>
                                  <React.Fragment>
                                    {" I consider myself helpful, loyal and friendly. I chose to approach Heroes of Mavia because a strategy game combined with the world of crypto-currencies has never been seen before \n"}
                                  </React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Anastasia"}
                                  </span>
                                  <React.Fragment>
                                    {" I'm a friendly, kind and dynamic person, looking for new experiences and situations full of ideas to grow. \n"}
                                  </React.Fragment>
                                </React.Fragment>
                              }
                            </div>
                          </div>
                        </div>
                      </div>

                      <div className={classNames(projectcss.all, sty.column__wMsG1)} >
                        <div className={classNames(projectcss.all, sty.freeBox__nKyi)}>
                          <div className={classNames(projectcss.all, sty.freeBox__fOpl)} style={{ overflowX: "scroll" }} >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__iyzRx)}
                              displayHeight={"171px" as const}
                              displayMaxHeight={"171px" as const}
                              displayMaxWidth={"171px" as const}
                              displayMinHeight={"171px" as const}
                              displayMinWidth={"171px" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/mavia_sun/images/LOGO_orange.jpeg",
                                fullWidth: 316,
                                fullHeight: 376,
                                aspectRatio: undefined
                              }}
                            />

                            <h5 className={classNames(projectcss.all, projectcss.h5, projectcss.__wab_text, sty.h5__gNw8K)} >
                              {"Social"}
                            </h5>

                            <div before={"" as const} className={classNames(projectcss.all, projectcss.__wab_text, sty.text__i5Cyh)} >
                              {
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Luca"}
                                  </span>
                                  <React.Fragment>
                                    {" Hi, I’m Luca, Instagram director. Nowadays, borders form real and virtual life and virtual are increasingly blurred. Change your mind today, tomorrow is too late \n"}
                                  </React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"M.Xehanort"}
                                  </span>
                                  <React.Fragment>
                                    {" The search for detail is the key and the inspiration that generates curiosity; and that's my task, to let Mavia know more deeply so that you can get to the heart of the game.\n"}
                                  </React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Francesco"}
                                  </span>
                                  <React.Fragment>
                                    {" I'm a crypto enthusiast social media manager, copywriter and content creator. Very passionate in creating stuff on social media, communication and marketing. \n"}
                                  </React.Fragment>
                                </React.Fragment>
                              }
                            </div>
                          </div>
                        </div>
                      </div>

                      <div className={classNames(projectcss.all, sty.column__wMsG1)} >
                        <div className={classNames(projectcss.all, sty.freeBox__nKyi)}>
                          <div className={classNames(projectcss.all, sty.freeBox__fOpl)} style={{ overflowX: "scroll" }} >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__iyzRx)}
                              displayHeight={"171px" as const}
                              displayMaxHeight={"171px" as const}
                              displayMaxWidth={"171px" as const}
                              displayMinHeight={"171px" as const}
                              displayMinWidth={"171px" as const}
                              displayWidth={"auto" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/mavia_sun/images/LOGO_green.jpeg",
                                fullWidth: 316,
                                fullHeight: 376,
                                aspectRatio: undefined
                              }}
                            />

                            <h5 className={classNames(projectcss.all, projectcss.h5, projectcss.__wab_text, sty.h5__gNw8K)} >
                              {"Art"}
                            </h5>

                            <div before={"" as const} className={classNames(projectcss.all, projectcss.__wab_text, sty.text__i5Cyh)} >
                              {
                                <React.Fragment>
                                  <React.Fragment>{""}</React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Riccardo"}
                                  </span>
                                  <React.Fragment>
                                    {" I am a graphic designer and illustrator. I graduated from the Academy of Fine Arts with honors and I am constantly looking for inspiring projects\n"}
                                  </React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Andrea"}
                                  </span>
                                  <React.Fragment>
                                    {" Everbody calls me Andre, i started drawing since i was like 14 y/o. I've seen in nft new opportunity to develop my art and my style. \n"}
                                  </React.Fragment>
                                </React.Fragment>
                              }
                            </div>
                          </div>
                        </div>
                      </div>

                    </p.Stack>
                  </div>
                }
              </div>
            ) : null}
            {(
              hasVariant(globalVariants, "screen", "mediumSize") ? true : true
            ) ? (
              <HeroSection
                data-plasmic-name={"footerBanner"}
                data-plasmic-override={overrides.footerBanner}
                className={classNames("__wab_instance", sty.footerBanner)}
              />
            ) : null}

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "bigVerticalStack",
    "wrappedStack",
    "header",
    "landingVStack",
    "innerHStack",
    "titaleVStack",
    "wrapStack",
    "h1Text",
    "h4Text",
    "button",
    "svg",
    "imageHStack",
    "imageBox",
    "mainArticles",
    "allArticles",
    "features",
    "container4",
    "outerRow2",
    "valusRow1",
    "valusRow2",
    "outerRow3",
    "row4",
    "preTeam",
    "team",
    "wrapTeam",
    "footerBanner",
    "footer"
  ],
  bigVerticalStack: [
    "bigVerticalStack",
    "wrappedStack",
    "header",
    "landingVStack",
    "innerHStack",
    "titaleVStack",
    "wrapStack",
    "h1Text",
    "h4Text",
    "button",
    "svg",
    "imageHStack",
    "imageBox",
    "mainArticles",
    "allArticles"
  ],
  wrappedStack: [
    "wrappedStack",
    "header",
    "landingVStack",
    "innerHStack",
    "titaleVStack",
    "wrapStack",
    "h1Text",
    "h4Text",
    "button",
    "svg",
    "imageHStack",
    "imageBox",
    "mainArticles",
    "allArticles"
  ],
  header: ["header"],
  landingVStack: [
    "landingVStack",
    "innerHStack",
    "titaleVStack",
    "wrapStack",
    "h1Text",
    "h4Text",
    "button",
    "svg",
    "imageHStack",
    "imageBox"
  ],
  innerHStack: [
    "innerHStack",
    "titaleVStack",
    "wrapStack",
    "h1Text",
    "h4Text",
    "button",
    "svg",
    "imageHStack",
    "imageBox"
  ],
  titaleVStack: [
    "titaleVStack",
    "wrapStack",
    "h1Text",
    "h4Text",
    "button",
    "svg"
  ],
  wrapStack: ["wrapStack", "h1Text", "h4Text", "button", "svg"],
  h1Text: ["h1Text"],
  h4Text: ["h4Text"],
  button: ["button", "svg"],
  svg: ["svg"],
  imageHStack: ["imageHStack", "imageBox"],
  imageBox: ["imageBox"],
  mainArticles: ["mainArticles"],
  allArticles: ["allArticles"],
  features: [
    "features",
    "container4",
    "outerRow2",
    "valusRow1",
    "valusRow2",
    "outerRow3",
    "row4"
  ],
  container4: [
    "container4",
    "outerRow2",
    "valusRow1",
    "valusRow2",
    "outerRow3",
    "row4"
  ],
  outerRow2: ["outerRow2", "valusRow1", "valusRow2", "outerRow3", "row4"],
  valusRow1: ["valusRow1"],
  valusRow2: ["valusRow2", "outerRow3", "row4"],
  outerRow3: ["outerRow3", "row4"],
  row4: ["row4"],
  preTeam: ["preTeam"],
  team: ["team", "wrapTeam"],
  wrapTeam: ["wrapTeam"],
  footerBanner: ["footerBanner"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  bigVerticalStack: "div";
  wrappedStack: "div";
  header: typeof Header2;
  landingVStack: "div";
  innerHStack: "div";
  titaleVStack: "div";
  wrapStack: "div";
  h1Text: "h1";
  h4Text: "div";
  button: typeof Button;
  svg: "svg";
  imageHStack: "div";
  imageBox: "div";
  mainArticles: typeof BlogPosts;
  allArticles: typeof BlogPost;
  features: "section";
  container4: "div";
  outerRow2: "div";
  valusRow1: "div";
  valusRow2: "div";
  outerRow3: "div";
  row4: "div";
  preTeam: "div";
  team: "div";
  wrapTeam: "section";
  footerBanner: typeof HeroSection;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
  // Specify args directly as props
  Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
  // Specify overrides for each element directly as props
  Omit<
    NodeOverridesType<T>,
    ReservedPropsType | VariantPropType | ArgPropType
  > &
  // Specify props for the root element
  Omit<
    Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
    ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
  >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    bigVerticalStack: makeNodeComponent("bigVerticalStack"),
    wrappedStack: makeNodeComponent("wrappedStack"),
    header: makeNodeComponent("header"),
    landingVStack: makeNodeComponent("landingVStack"),
    innerHStack: makeNodeComponent("innerHStack"),
    titaleVStack: makeNodeComponent("titaleVStack"),
    wrapStack: makeNodeComponent("wrapStack"),
    h1Text: makeNodeComponent("h1Text"),
    h4Text: makeNodeComponent("h4Text"),
    button: makeNodeComponent("button"),
    svg: makeNodeComponent("svg"),
    imageHStack: makeNodeComponent("imageHStack"),
    imageBox: makeNodeComponent("imageBox"),
    mainArticles: makeNodeComponent("mainArticles"),
    allArticles: makeNodeComponent("allArticles"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    valusRow1: makeNodeComponent("valusRow1"),
    valusRow2: makeNodeComponent("valusRow2"),
    outerRow3: makeNodeComponent("outerRow3"),
    row4: makeNodeComponent("row4"),
    preTeam: makeNodeComponent("preTeam"),
    team: makeNodeComponent("team"),
    wrapTeam: makeNodeComponent("wrapTeam"),
    footerBanner: makeNodeComponent("footerBanner"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
