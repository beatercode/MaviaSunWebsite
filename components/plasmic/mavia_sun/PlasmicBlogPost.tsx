// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mJU3w7LiKHPBKUALsVD2dj
// Component: GPII4fC9bhF
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: kodhyUpj2vfND/component

import { useScreenVariants as useScreenVariantsohuKUq66Y5Rscr } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ohuKUq66y5rscr/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_mavia_sun.module.css"; // plasmic-import: mJU3w7LiKHPBKUALsVD2dj/projectcss
import sty from "./PlasmicBlogPost.module.css"; // plasmic-import: GPII4fC9bhF/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: ZNnQiOQA-EMqaf/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: CzXEhqLtaA5P__/icon

export type PlasmicBlogPost__VariantMembers = {};

export type PlasmicBlogPost__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlogPost__VariantsArgs;
export const PlasmicBlogPost__VariantProps = new Array<VariantPropType>();

export type PlasmicBlogPost__ArgsType = {};
type ArgPropType = keyof PlasmicBlogPost__ArgsType;
export const PlasmicBlogPost__ArgProps = new Array<ArgPropType>();

export type PlasmicBlogPost__OverridesType = {
  root?: p.Flex<"div">;
};

export interface DefaultBlogPostProps {
  className?: string;
}

function PlasmicBlogPost__RenderFunc(props: {
  variants: PlasmicBlogPost__VariantsArgs;
  args: PlasmicBlogPost__ArgsType;
  overrides: PlasmicBlogPost__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsohuKUq66Y5Rscr()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.column__cJi5A)}>
        <div className={classNames(projectcss.all, sty.freeBox___8PD4F)}>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__kRyiJ)}
          >
            <div className={classNames(projectcss.all, sty.column___3TKyo)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__rJyvd
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile") ? (
                  "Twitter"
                ) : (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FDFDFD", fontWeight: 700 }}
                    >
                      {"Twitter"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                )}
              </h2>

              <div className={classNames(projectcss.all, sty.columns___7LFZr)}>
                <div className={classNames(projectcss.all, sty.column__ce84T)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__e985O)}
                    displayHeight={"100%" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? ("100%" as const)
                        : ("100%" as const)
                    }
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/mavia_sun/images/_16CMjpy3P7OsmuEgQrVakwjpeg.png",
                      fullWidth: 1024,
                      fullHeight: 576,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__e9ULr)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cbGaD)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__oA21
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Customer Loyalty Programs That Stick"
                        : "Blog heading dummy"}
                    </h4>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Ojaa
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                      }
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__qPw5O
                      )}
                      color={"blue" as const}
                      endIcon={
                        <ArrowRightsvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___32Nmv
                          )}
                          role={"img"}
                        />
                      }
                      shape={"rounded" as const}
                      showEndIcon={true}
                    >
                      {"Read post"}
                    </Button>
                  </div>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__rbp1E)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ujlHb
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile") ? (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF", fontWeight: 700 }}
                    >
                      {"Medium"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {"Medium"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                )}
              </h2>

              <div className={classNames(projectcss.all, sty.columns___6GrVt)}>
                <div className={classNames(projectcss.all, sty.column__uzeD)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wNTkB)}
                    displayHeight={"100%" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/mavia_sun/images/_1ENwbBn30OuDnORapRRivewpng.png",
                      fullWidth: 1024,
                      fullHeight: 576,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column___1WxFy)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7QxLl)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__cIt39
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Customer Loyalty Programs That Stick"
                        : "Blog heading dummy"}
                    </h4>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dMNiC
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                      }
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__qUk1R
                      )}
                      color={"blue" as const}
                      endIcon={
                        <ArrowRightsvgIcon
                          className={classNames(projectcss.all, sty.svg__vGrSh)}
                          role={"img"}
                        />
                      }
                      shape={"rounded" as const}
                      showEndIcon={true}
                    >
                      {"Read post"}
                    </Button>
                  </div>
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column__lfb0B)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__fM0HY
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile") ? (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF", fontWeight: 700 }}
                    >
                      {"Others"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF", fontWeight: 700 }}
                    >
                      {"Other"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                )}
              </h2>

              <div className={classNames(projectcss.all, sty.columns__hcLcy)}>
                <div className={classNames(projectcss.all, sty.column___4EHwX)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__a2DTt)}
                    displayHeight={"100%" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/mavia_sun/images/_1F4P43SsLnMrknYfg9Mqqgjpeg.png",
                      fullWidth: 1280,
                      fullHeight: 675,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__j3XvM)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ePhXg)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__rfS0W
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Customer Loyalty Programs That Stick"
                        : "Blog heading dummy"}
                    </h4>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qDoj
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                      }
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__tbNhH
                      )}
                      color={"blue" as const}
                      endIcon={
                        <ArrowRightsvgIcon
                          className={classNames(projectcss.all, sty.svg__loWf6)}
                          role={"img"}
                        />
                      }
                      shape={"rounded" as const}
                      showEndIcon={true}
                    >
                      {"Read post"}
                    </Button>
                  </div>
                </div>
              </div>
            </div>
          </p.Stack>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlogPost__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlogPost__VariantsArgs;
    args?: PlasmicBlogPost__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlogPost__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBlogPost__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBlogPost__ArgProps,
      internalVariantPropNames: PlasmicBlogPost__VariantProps
    });

    return PlasmicBlogPost__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlogPost";
  } else {
    func.displayName = `PlasmicBlogPost.${nodeName}`;
  }
  return func;
}

export const PlasmicBlogPost = Object.assign(
  // Top-level PlasmicBlogPost renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicBlogPost
    internalVariantProps: PlasmicBlogPost__VariantProps,
    internalArgProps: PlasmicBlogPost__ArgProps
  }
);

export default PlasmicBlogPost;
/* prettier-ignore-end */
